# Environment Configuration for News Risk Analyzer with Azure OpenAI
# Copy this file to .env and update with your actual Azure OpenAI values

# ==========================================
# API CONFIGURATION
# ==========================================

# PROVIDER: Choose your LLM provider - 'openai' or 'azure'
LLM_PROVIDER=azure

# OPENAI CONFIGURATION (when LLM_PROVIDER=openai)
# Leave commented when using Azure
# OPENAI_API_KEY=your_openai_api_key_here

# AZURE OPENAI CONFIGURATION (when LLM_PROVIDER=azure)
# Replace with your actual Azure OpenAI values
AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here
AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com/
AZURE_OPENAI_API_VERSION=2024-02-15-preview
AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4o

# MODEL CONFIGURATION
# For Azure, this should match your deployment name
LLM_MODEL=gpt-4o

# ==========================================
# DATABASE CONFIGURATION
# ==========================================
RISK_DB=risk_dashboard.db
KNOWLEDGE_DB=risk_dashboard.db

# ==========================================
# PROCESSING CONFIGURATION
# ==========================================
MAX_RETRIES=3
RETRY_DELAY=60
BATCH_SIZE=100

# ==========================================
# CONNECTION POOL CONFIGURATION
# ==========================================
# Maximum number of database connections per pool
MAX_CONNECTIONS=5

# Connection timeout in seconds
CONNECTION_TIMEOUT=30

# ==========================================
# MONITORING CONFIGURATION (Optional)
# ==========================================
# Enable detailed logging
DEBUG_LOGGING=true

# Health check interval in minutes
HEALTH_CHECK_INTERVAL=30


# Recommended: 1 for faster processing, 2-3 for higher quality
MAX_OPTIMIZATION_ITERATIONS=1
# ==========================================
# AZURE OPENAI NOTES
# ==========================================
# 1. Create an Azure OpenAI resource in Azure Portal
# 2. Deploy a GPT-4o model (or another model) and note the deployment name
# 3. Get your API key from the Azure OpenAI resource
# 4. Set AZURE_OPENAI_DEPLOYMENT_NAME to match your deployment name
# 5. Set AZURE_OPENAI_ENDPOINT to your resource endpoint
# 6. Set AZURE_OPENAI_API_KEY to your API key
